#Agent Status
agent.unknown=1
agent.unregistered=2
agent.running=3
agent.stopped=4
agent.unavailable=5
agent.stopping=6
agent.starting=7

#Agent credentials file name with their location
agent.username.password.file.name=

#Agent file store path
# Should be JITTERBIT_HOME/DataInterchange/file_store
agent.file.store.path=

#Rest service all retry duration (IN MINUTES)
agent.rest.service.call.retry.duration=5
agent.rest.service.call.retry.slowdown.duration=4

#Rest service retry wait interval(IN SECONDS)
agent.rest.service.call.retry.wait.interval.before.slowdown=5
agent.rest.service.call.retry.wait.interval.after.slowdown=60

#Agent logins to cloud if it has not done for last 5 minutes
agent.login.interval=300

#Agent heart beat interval (IN MINUTES)
agent.heart.beat.interval=5

#Sync log interval (IN SECONDS)
agent.sync.log.interval=10

#Monitor log interval (IN SECONDS)
agent.jms.monitor.interval=300

# The URL of the SOAP services that serve the Studio at design time.
# The SOAP requests come in over the JMS queue.
# soap.service.url should normally be left empty. The default (http://localhost:46908/soap-services/) can be overridden here.
soap.service.url=

# Setting this to true will print the full SOAP request/response to the log.
soap.service.debug=false

#content type for communication between agent and cloud - valid values are XML and JSON
agent.content.type=XML

#Agent Trigger ReSync Errors comma separated
agent.sync.trigger.error=violates unique constraint

#max concurrent messaging requests
max.concurrent.requests=40

#sync agent thread executor properties
sync.agent.thread.executor.core.pool.size=10
sync.agent.thread.executor.max.pool.size=20
sync.agent.thread.executor.keep.alive.time=60
sync.agent.thread.executor.block.queue.size=100

#agent api versions
success.failure.files.api.version=1.0

#no of times run operation sync should be retried in case of failure
run.op.sync.retry.limit=1

#flag to indicate if the connector component listener should be started
start.component.listener=true

#Update Capability interval (IN SECONDS)
update.capability.interval=30

#Setting it to 'true' will make the agent ignore the capability flag
#i.e. it will be always treated as capable agent
ignore.capability.flag=false

#Agent drain stop
agent.drain.stop.database.poll.no.of.retries=100
agent.drain.stop.database.poll.interval.in.millisec=10000

server.to.agent.http.call.timeout.in.sec=180

