# Configuration file for the Jitterbit Integration Server.
# All file names are relative to JITTERBIT_HOME (location of this file), unless otherwise noted.
#
# This file is loaded by executables and backend web services.
# Options for executables can be overridden on the command line:
# Setting/Key=newValue
# or
# --Setting-Key newValue
# will override the configuration file entry
# [Setting]
# Key=Value
#
# An alternative configuration file can be loaded with
# -f file
# or
# --configuration-file file
# or
# configuration-file=file
# Options specified on the command line take precedence over options
# in the alternative configuration file as well.

[Settings]
# Temporary directory used by the backend is provided by the operation system by default.
# If a different temporary directory is required, it can be set here.
TempDir=T:/EncryptedJitterbit
# Set this to a valid directory name to get detailed debugging of (s)ftp(s)/http(s) transfers.
# Each transfer session will create a new file in this directory.
# CurlDebugDir=
# By default you can't use arbitrary local files as a source/target. Set this option to true if you want to enable it.
EnableLocalFileLocation=false

[DbInfo]
User=jitterbit
Password='blahblahblah'
Driver='PostgreSQL ODBC Driver(UNICODE)'
SystemDbName='postgres'
Server=127.0.0.1
Port=6543

[ProcessEngine]
# This is the number of worker threads used by the Process Engine, min 1, max 200. auto means 2 * number of cores.
MaxNumberOfWorkerThreads = 16
RunOperationsInSeparateProcess = true
EnableDebugDump = 0
# DebugDumpDir = /tmp
# Set global limit on how long an operation is allowed to run on this agent. Only applicable if RunOperationsInSeparateProcess=1. Default is unlimited
MaxOperationRuntimeSeconds = 21600
MaxOperationRuntimeMessage='Your operation has exceeded the maximum run time for Cloud agents. Please split the operations to use smaller data sets or use a local agent.'
#Limit the number of operations per Environment so any one cannot use all the worker threads
MaxNumberOfWorkerThreadsPerEnv=8

# Set default values of predefined global data elements here.
# These can be overridden on a case-by-case basis by setting the corresponding data element in a script.
# For a description of these and more see the Jitterbit documentation (Reference -> Using Global Variables)
[PredefinedGlobalVariables]
#jitterbit.source.db.preserve_char_whitespace=false
#jitterbit.target.db.include_null_in_sql_statement=false
#jitterbit.scripting.nesting.max=10
#jitterbit.scripting.while.max_iterations=50000
#jitterbit.scripting.db.auto_commit=true
#jitterbit.scripting.db.max_rows=10000
#jitterbit.scripting.ldap.scope=1
#jitterbit.scripting.ldap.include_dn_in_results=false
#jitterbit.scripting.ldap.use_paged_search=false
#jitterbit.scripting.ldap.max_search_results=1
#jitterbit.scripting.ldap.return_null_if_no_results=false
#jitterbit.source.text.csv_nullable=false
#jitterbit.target.xml.num_for_bool=false
#jitterbit.source.ftp.transfer_timeout=3600
#jitterbit.target.ftp.transfer_timeout=3600
#jitterbit.http.enable_cookies=false

[TransformationEngine]
# Turn on detailed logging of transformations by setting WriteLog=1. Can be set on the operation level as well, which is preferrable
# This is mostly for debugging problems with transformations. This option will produce a lot of files so don't keep it on in production.
WriteLog=0
# Debug logs are written to JITTERBIT_HOME/DataInterchange/Temp/Debug by default. Use this option to override it
WriteLogDir=
# Set ValidateXML=0 to globally turn off all XML validation. It's recommended to set this on the transformation level instead.
ValidateXML=1
# Set LdapEnableAutoUpdateMode to true to do a search for each entry to determin if the entry should be added or updated.
LdapEnableAutoUpdateMode=false
# Turn on profiling globally. Profiling files are written to JITTERBIT_HOME/DataInterchange/Temp/LOG
TimingOn=0
# Set AutoStreaming to 0 to disable streaming by default. It's recommended to do this on individual transformations instead.
AutoStreaming=1
# set UseOldRuleForLoopOneOfXmlNode=1 to use the old rule for creating one-of xml target node. This parameter is to ensure the backward compatibility only.
UseOldRuleForLoopOneOfXmlNode=0
# if AutoXsiNil=1 then the transformation will automatically create an xsi:nil="true" attribute for an element which is mandatory and unmapped.
AutoXsiNil=0

[OperationEngine]
# Set this flag to true if temporary data (such as files, OperationDataElements) should not be deleted
# This option will also cause more process messages to be written to the log file. WriteLog=true implies Debug=true
Debug=false
# If there are no source files available for a file-based source, the default is to not run success/failure operations.
# This option changes this default.
AlwaysRunSuccessOperation=false
# Option for changing the root directory for temporary storage
# TemporaryStorageRootDirectory=/tmp/tmpstore
# Limit the number of threads that a single operation can use. The default is unlimited.
# MaxNumberOfOperationThreads=4
# The maximum nested synchronous operation calls that are allowed. The default is 50. Set to 0 or a negative number to make it unlimited.
# Setting it to unlimited is not recommended since it can cause system instability.
MaxOperationStackDepth=50
# The maximum number of asynchronous operations allowed in a single chain. This is to guard against infintite operation loops.
# The default is 50. Set to 0 or a negative number to make it unlimited.

MaxNumberOfOperationThreads=5
AlwaysDeleteTempDir=true
MaxAsyncOperationChainLengthOverrideAllowed=false

# Options for logging of API calls in the activity log.
# The default is to log only errors. Successful operations can be monitored in the API Analytics web tool.
[APIOperation]
EnableErrorLogging=true
EnableLogging=false

# Options for logging of HTTP Hosted Endpoint calls in the activity log.
# The default is to log only errors.
[HttpEndPoints]
EnableErrorLogging=true
EnableLogging=true

# Option to control creation of success/failure files. The default is to enable both success and failure files
# Disable if you don't want them to be generated (saves disk space)
[ResultFiles]
DisableSuccess=true
DisableFailure=true

[PredefinedServerGlobalDataElement]
# Custom pre-defined global data elements can be defined here. These are initialized for any operation that starts on the server.
# For example, adding
# bubble='gum'
# adds a global variable called bubble with the initial value "gum" referenced in scripts as $bubble or Get("bubble").

[Scheduler]
AutoStart=1
SleepTimeInSeconds=5
# Set WriteLog to non-zero to activate debug logging.
# The log is written to the temporary directory and is called "scheduler_debug.log"
WriteLog=0

[FileCleanup]
AutoStart=1
SleepTimeInSeconds=60
FrequencyInHours=5

[SmtpClient]
# Comma separated list of smtp servers to try when an email message is sent if none was specified by the user.
DefaultSmtpServers=
# Default email address to use for the From field if none was specified by the user.
DefaultFromEmail=
# If your smtp server needs authentication the account and password can be added here. Set UseSSL=true if the smtp server requires SSL/TLS.
DefaultAccount=
DefaultAccountPassword=
UseSSL=

[SSH]
# Absolute paths to your public/private SSH keyfiles and optional pass-phrase for the private key.
# The public key is optional and can be left blank.
# Make sure these files can be read by jitterbit but no-one else!

# PrivateKeyFile='/usr/local/ssh/id_dsa'
# PrivateKeyPassphrase=
# PublicKeyFile=

# Multiple sets can be configured by setting
# $jitterbit.source.sftp.ssh_key_id="Me"
# or
# $jitterbit.target.sftp.ssh_key_id="Me"

# With an entry like this:
# PrivateKeyFileMe='/usr/local/ssh/id_dsa'
# PrivateKeyPassphraseMe=
# PublicKeyFileMe='/usr/local/ssh/id_dsa.pub'

[SSL]
# Configure SSL client certificates. Absolute paths to certificate and private key with passphrase if needed.
# Make sure these files can be read by jitterbit but no-one else!
# Only PEM formatted certificates and keys are supported.

# CertificateFile='C:/Certs/default.crt'
# PrivateKeyFile='C:/Certs/default.key'
# PrivateKeyPassphrase=default

# Multiple sets can be configured by setting
# $jitterbit.target.http.ssl_cert_id = "Me";
# or
# $jitterbit.source.http.ssl_cert_id = "Me";
# or
# $jitterbit.web_service_call.ssl_cert_id = "Me";

# With an entry like this:
# CertificateFileMe='C:/Users/Emanuel Norrbin/Certs/me.crt'
# PrivateKeyFileMe='C:/Users/Emanuel Norrbin/Certs/me.key'
# PrivateKeyPassphraseMe=mysecret

[Settings/XMLSchemas]
Schema_2001='DataInterchange/xml_dtd/Schemas/XMLSchema_2001.xsd'
Schema_1999='DataInterchange/xml_dtd/Schemas/XMLSchema_1999.xsd'
SoapEncoding='DataInterchange/xml_dtd/Schemas/SOAP_Encoding.xsd'
WSDL='DataInterchange/xml_dtd/Schemas/WSDL.xsd'
SoapEncoding_v11='DataInterchange/xml_dtd/Schemas/SOAP_Encoding_v11.xsd'
SoapEncoding_v12='DataInterchange/xml_dtd/Schemas/SOAP_Encoding_v12.xsd'

# Some database drivers need special characters to delimit
# table/column names. If you have special needs for your application
# you can modify these entries.

[DbDrivers]
# Many ODBC drivers require table and field names to be quoted if they are
# case sensitive or contain special characters.
# Configure the quote character(s) for your driver here if it is not already available.

# PostgreSQL
'PostgreSQL Quote Begin'='\"'
'PostgreSQL Quote End'='\"'

'PostgreSQL-psql Quote Begin'='\"'
'PostgreSQL-psql Quote End'='\"'

'PostgreSQL ANSI Quote Begin'='\"'
'PostgreSQL ANSI Quote End'='\"'

'PostgreSQL Unicode Quote Begin'='\"'
'PostgreSQL Unicode Quote End'='\"'

# For SQL Server the Quote Begin and End is necessary only for
# Tables or Columns containing special character(s)
'SQL Server Quote Begin'='['
'SQL Server Quote End'=']'

# MySQL 
'MySQL Quote Begin'='`'
'MySQL Quote End'='`'

# For MySQL the Quote Begin and End are needed for tables with spaces in them.
'MySQL ODBC 3.51 Driver Quote Begin'='`'
'MySQL ODBC 3.51 Driver Quote End'='`'

# MySQL 5.1 driver.
'MySQL ODBC 5.1 Driver Quote Begin'='`'
'MySQL ODBC 5.1 Driver Quote End'='`'

# Oracle
'Oracle Quote Begin'='\"'
'Oracle Quote End'='\"'

# Oracle XE
'Oracle in XE Quote Begin'='\"'
'Oracle in XE Quote End'='\"'

# Microsoft ODBC for Oracle
'Microsoft ODBC for Oracle Quote Begin'='\"'
'Microsoft ODBC for Oracle Quote End'='\"'

# Oracle ODBC Driver
'Oracle ODBC Driver Quote Begin'='\"'
'Oracle ODBC Driver Quote End'='\"'

#Oracle in OraClient10g_home2
'Oracle in OraClient10g_home2 Quote Begin'='\"'
'Oracle in OraClient10g_home2 Quote End'='\"'

# Access
'Microsoft Quote Begin'='['
'Microsoft Quote End'=']'

# MS Access
'Microsoft Access Driver (*.mdb) Quote Begin'='['
'Microsoft Access Driver (*.mdb) Quote End'=']'

# Excel
'Excel Quote Begin'='['
'Excel Quote End'=']'

# MS Excel
'Microsoft Excel Driver (*.xls) Quote Begin'='['
'Microsoft Excel Driver (*.xls) Quote End'=']'

# MS Excel - alternate name
'Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb) Quote Begin'='['
'Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb) Quote End'=']'

# File Maker Pro
'DataDirect 32-BIT SequeLink 5.4 Quote Begin'='\"'
'DataDirect 32-BIT SequeLink 5.4 Quote End'='\"'

#DB2
'IBM DB2 (AS400) Quote Begin'='\"'
'IBM DB2 (AS400) Quote End'='\"'

#####
## MaxConnections - The max number of total connections to keep in the pool. 
##                  If {@code <= 0}, the default value defined by the Apache HttpClient library is used (currently 20).
## MaxConnectionsPerRoute - The max number of connections per route. If {@code <= 0}
##                          , the default value defined by the Apache HttpClient library is used (currently 2).
## TimeoutInSeconds - The timeout, in seconds, to wait for a connection from the pool. 
## HttpSocketTimeoutInSeconds - the timeout, in seconds, after establishing the connection
##                              , the client socket waits for response after sending the request
## HttpConnectionTimeoutInSeconds - The timeout, in seconds, to wait for the connection with the remote host
#####

[HttpConnectionPool]
MaxConnections=50
MaxConnectionsPerRoute=5
TimeoutInSeconds=60
HttpSocketTimeoutInSeconds=180
HttpConnectionTimeoutInSeconds=180

[HttpConnectionPoolLocal]
MaxConnections=50
MaxConnectionsPerRoute=50
TimeoutInSeconds=60
HttpSocketTimeoutInSeconds=180
HttpConnectionTimeoutInSeconds=180

[Debug]
# Backend web services will write debug info to this file in debug mode.
# The default is platform dependent but can be changed here.
# To turn off this feature set this to an empty string.
WebServiceDebugFile=''

# The ErrorHandling section provides configuration options for how to 
# handle potential error situations in the backend. Possible values are:
#   Ok - the situation is regarded as normal, continue as usual
#   Warning - log a warning and continue.
#   Error - the situation is regarded as fatal
# These options will be configurable through the client in a future version.
# The default is shown in the comment, uncomment and change to override the default.

[ErrorHandling]
# An UPDATE statement in a DB target does not affect any rows:
# NoRowsAffectedOnDbUpdates=Ok

# No target data was generated.
# NoTargetDataGenerated=Ok

# There is no data available to generate a valid web service request
# NoWebServiceRequestData=Warning

# A flat database source is empty.
# EmptyDatabaseSource=Warning

[JavaBackend]
# Defines the debug log level for the Java backend. This should be the name of one of the levels
# defined by java.util.loggin.Level. The default value, if not defined here, is OFF,
# which disables all debug logging.
# (See http://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html)
# DebugLogLevel=INFO

[JavaUiBackend]
# Defines the log level for the Java UI backend. This should be the name of one of the levels
# defined by java.util.loggin.Level. The default value, if not defined here, is OFF,
# which disables all Java UI backend logging.
# (See http://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html)
LogLevel=OFF

[JdbcEngine]
# Defines the number of idle minutes after wich open JDBC sessions will timeout.
# This is used as a failback measure, as the sessions will normally be closed
# by the server after use.
SessionTimeout=60

# Defines the maximum time that a JDBC operation is allowed to take. After this time the operation will fail.
# This is used as a failback measure in case the JDBC engine is hung or unresponsive.
# If you think that a JDBC operation will take longer than this (e.g. a JDBC target write process) then you need to increase this number.
ClientSessionTimeout=180

# Defines the JdbcEngine's log level. This should be the name of one of the levels
# defined by java.util.loggin.Level.
# (See http://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html)
LogLevel=INFO

# For some connectors only. Normally should not be changed. Only change if instructed to do so.
[ConnectorsInfo]
#MSAXUrl = http://127.0.0.1:8002/AX/
#MSCrmUrl = http://127.0.0.1:8000/CRM/
# time out unit : seconds
jitterbit.connectorcall.timeout=300

# For debugging only:
# Options for executables can be overridden on the command line:
# Setting/Key=newValue
# or
# --Setting-Key newValue
# will override the configuration file entry
# [Setting]
# Key=Value

# An alternative configuration file can be loaded with
# -f file
# or
# --configuration-file file
# or
# configuration-file=file
# Options specified on the command line take precedence over options
# in the alternative configuration file as well.



[LogSync]
# Max number of records at once to sync - This is the initial batch size only! After retries it goes
#back to MinRecordsToSync!
MaxRecordsToSync=500
#Max sleep between retries
MaxRetryDelaySec=60
#It's actually the maximum after retries have kicked in!
MinRecordsToSync=500















